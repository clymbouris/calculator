$(document).ready(function(){function ViewModel(arr){var self=this;self.maxCharacters=52,self.memory=ko.observable("").extend({maxCharacters:self.maxCharacters}),self.display=ko.observable(""),self.getLast=function(e){return self.memory().split("")[self.memory().length-1]},self.evaluate=function(){var calculation=parseFloat(eval(self.memory())).toPrecision(6);self.display(Number(calculation)),self.memory(""),self.allowFirstOperator=!0},self.allowFirstOperator=!1,self.wrapInBrackets=function(e){return"("+e+")"},self.allClear=function(){self.memory(""),self.display(""),self.allowFirstOperator=!1},self.singleClear=function(){self.memory(self.memory().slice(0,self.memory().length-1))},self.verify=function(e){switch(e){case"=":self.evaluate();break;case"AC":self.allClear();break;case"C":self.singleClear();break;case"x":(self.memory().length>0||self.allowFirstOperator)&&(e="*",self.update(e));break;case"/":(self.memory().length>0||self.allowFirstOperator)&&self.update(e);break;case"%":self.memory().length>0&&(self.update("*1/100"),self.memory(self.wrapInBrackets(self.memory())),self.evaluate());break;case",":e=".",this.commaValid()&&self.update(e);break;default:self.update(e)}},self.commaValid=function(){var e,l=this.memory().split("");for(e=l.length-1;e>=0;e--){if("."===l[e])return!1;if(this.isOperator(l[e]))return!0}return!0},self.update=function(e){var l=self.getLast();self.isOperator(l)&&self.isOperator(e)?self.memory(self.memory().slice(0,self.memory().length-1)+e):self.memory(self.memory()+e)},self.isOperator=function(e){var l;for(l=0;l<model.operators.length;l++)if(e===model.operators[l])return!0;return!1}}var model={operators:["+","-","/","*","%"],signs:["+","-"]},view={init:function(){this.$keys=$(".keys"),this.$keys.each(function(){$(this).click(function(){vm.verify($(this).text())})})}};view.init();var vm=new ViewModel;ko.applyBindings(vm)});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5qcyJdLCJuYW1lcyI6WyIkIiwiZG9jdW1lbnQiLCJyZWFkeSIsIlZpZXdNb2RlbCIsImFyciIsInNlbGYiLCJ0aGlzIiwibWF4Q2hhcmFjdGVycyIsIm1lbW9yeSIsImtvIiwib2JzZXJ2YWJsZSIsImV4dGVuZCIsImRpc3BsYXkiLCJnZXRMYXN0Iiwic3RyIiwic3BsaXQiLCJsZW5ndGgiLCJldmFsdWF0ZSIsImNhbGN1bGF0aW9uIiwicGFyc2VGbG9hdCIsImV2YWwiLCJ0b1ByZWNpc2lvbiIsIk51bWJlciIsImFsbG93Rmlyc3RPcGVyYXRvciIsIndyYXBJbkJyYWNrZXRzIiwiYWxsQ2xlYXIiLCJzaW5nbGVDbGVhciIsInNsaWNlIiwidmVyaWZ5IiwidmFsIiwidXBkYXRlIiwiY29tbWFWYWxpZCIsImkiLCJtZW0iLCJpc09wZXJhdG9yIiwibGFzdCIsIngiLCJtb2RlbCIsIm9wZXJhdG9ycyIsInNpZ25zIiwidmlldyIsImluaXQiLCIka2V5cyIsImVhY2giLCJjbGljayIsInZtIiwidGV4dCIsImFwcGx5QmluZGluZ3MiXSwibWFwcGluZ3MiOiJBQUFBQSxFQUFBQyxVQUFBQyxNQUFBLFdBRUEsUUFBQUMsV0FBQUMsS0FDQSxHQUFBQyxNQUFBQyxJQUVBRCxNQUFBRSxjQUFBLEdBRUFGLEtBQUFHLE9BQUFDLEdBQUFDLFdBQUEsSUFDQUMsUUFBQUosY0FBQUYsS0FBQUUsZ0JBRUFGLEtBQUFPLFFBQUFILEdBQUFDLFdBQUEsSUFFQUwsS0FBQVEsUUFBQSxTQUFBQyxHQUNBLE1BQUFULE1BQUFHLFNBQUFPLE1BQUEsSUFBQVYsS0FBQUcsU0FBQVEsT0FBQSxJQUdBWCxLQUFBWSxTQUFBLFdBRUEsR0FBQUMsYUFBQUMsV0FBQUMsS0FBQWYsS0FBQUcsV0FBQWEsWUFBQSxFQUVBaEIsTUFBQU8sUUFBQVUsT0FBQUosY0FDQWIsS0FBQUcsT0FBQSxJQUNBSCxLQUFBa0Isb0JBQUEsR0FHQWxCLEtBQUFrQixvQkFBQSxFQUVBbEIsS0FBQW1CLGVBQUEsU0FBQVYsR0FDQSxNQUFBLElBQUFBLEVBQUEsS0FHQVQsS0FBQW9CLFNBQUEsV0FDQXBCLEtBQUFHLE9BQUEsSUFDQUgsS0FBQU8sUUFBQSxJQUNBUCxLQUFBa0Isb0JBQUEsR0FHQWxCLEtBQUFxQixZQUFBLFdBQ0FyQixLQUFBRyxPQUFBSCxLQUFBRyxTQUFBbUIsTUFBQSxFQUFBdEIsS0FBQUcsU0FBQVEsT0FBQSxLQUdBWCxLQUFBdUIsT0FBQSxTQUFBQyxHQUNBLE9BQUFBLEdBQ0EsSUFBQSxJQUNBeEIsS0FBQVksVUFDQSxNQUNBLEtBQUEsS0FDQVosS0FBQW9CLFVBQ0EsTUFDQSxLQUFBLElBQ0FwQixLQUFBcUIsYUFDQSxNQUNBLEtBQUEsS0FDQXJCLEtBQUFHLFNBQUFRLE9BQUEsR0FBQVgsS0FBQWtCLHNCQUNBTSxFQUFBLElBQ0F4QixLQUFBeUIsT0FBQUQsR0FFQSxNQUNBLEtBQUEsS0FDQXhCLEtBQUFHLFNBQUFRLE9BQUEsR0FBQVgsS0FBQWtCLHFCQUNBbEIsS0FBQXlCLE9BQUFELEVBRUEsTUFDQSxLQUFBLElBQ0F4QixLQUFBRyxTQUFBUSxPQUFBLElBRUFYLEtBQUF5QixPQUFBLFVBQ0F6QixLQUFBRyxPQUFBSCxLQUFBbUIsZUFBQW5CLEtBQUFHLFdBQ0FILEtBQUFZLFdBRUEsTUFDQSxLQUFBLElBQ0FZLEVBQUEsSUFDQXZCLEtBQUF5QixjQUNBMUIsS0FBQXlCLE9BQUFELEVBRUEsTUFDQSxTQUNBeEIsS0FBQXlCLE9BQUFELEtBSUF4QixLQUFBMEIsV0FBQSxXQUNBLEdBQ0FDLEdBREFDLEVBQUEzQixLQUFBRSxTQUFBTyxNQUFBLEdBRUEsS0FBQWlCLEVBQUFDLEVBQUFqQixPQUFBLEVBQUFnQixHQUFBLEVBQUFBLElBQUEsQ0FDQSxHQUFBLE1BQUFDLEVBQUFELEdBQ0EsT0FBQSxDQUVBLElBQUExQixLQUFBNEIsV0FBQUQsRUFBQUQsSUFDQSxPQUFBLEVBR0EsT0FBQSxHQUdBM0IsS0FBQXlCLE9BQUEsU0FBQUQsR0FDQSxHQUFBTSxHQUFBOUIsS0FBQVEsU0FDQVIsTUFBQTZCLFdBQUFDLElBQUE5QixLQUFBNkIsV0FBQUwsR0FDQXhCLEtBQUFHLE9BQUFILEtBQUFHLFNBQUFtQixNQUFBLEVBQUF0QixLQUFBRyxTQUFBUSxPQUFBLEdBQUFhLEdBR0F4QixLQUFBRyxPQUFBSCxLQUFBRyxTQUFBcUIsSUFJQXhCLEtBQUE2QixXQUFBLFNBQUFFLEdBQ0EsR0FBQUosRUFDQSxLQUFBQSxFQUFBLEVBQUFBLEVBQUFLLE1BQUFDLFVBQUF0QixPQUFBZ0IsSUFDQSxHQUFBSSxJQUFBQyxNQUFBQyxVQUFBTixHQUFBLE9BQUEsQ0FFQSxRQUFBLEdBSUEsR0FBQUssUUFDQUMsV0FBQSxJQUFBLElBQUEsSUFBQSxJQUFBLEtBQ0FDLE9BQUEsSUFBQSxNQUdBQyxNQUNBQyxLQUFBLFdBQ0FuQyxLQUFBb0MsTUFBQTFDLEVBQUEsU0FDQU0sS0FBQW9DLE1BQUFDLEtBQUEsV0FDQTNDLEVBQUFNLE1BQUFzQyxNQUFBLFdBQ0FDLEdBQUFqQixPQUFBNUIsRUFBQU0sTUFBQXdDLGFBTUFOLE1BQUFDLE1BRUEsSUFBQUksSUFBQSxHQUFBMUMsVUFDQU0sSUFBQXNDLGNBQUFGIiwiZmlsZSI6Im1haW4ubWluLmpzIiwic291cmNlc0NvbnRlbnQiOlsiJChkb2N1bWVudCkucmVhZHkoZnVuY3Rpb24oKSB7XG5cblx0ZnVuY3Rpb24gVmlld01vZGVsKGFycikge1xuXHRcdHZhciBzZWxmID0gdGhpcztcblxuXHRcdHNlbGYubWF4Q2hhcmFjdGVycyA9IDUyO1xuXG5cdFx0c2VsZi5tZW1vcnkgPSBrby5vYnNlcnZhYmxlKCcnKVxuXHRcdC5leHRlbmQoeyBtYXhDaGFyYWN0ZXJzOiBzZWxmLm1heENoYXJhY3RlcnMgfSk7XG5cblx0XHRzZWxmLmRpc3BsYXkgPSBrby5vYnNlcnZhYmxlKCcnKTtcblxuXHRcdHNlbGYuZ2V0TGFzdCA9IGZ1bmN0aW9uKHN0cikge1xuXHRcdFx0cmV0dXJuIHNlbGYubWVtb3J5KCkuc3BsaXQoJycpW3NlbGYubWVtb3J5KCkubGVuZ3RoIC0gMV07XG5cdFx0fTtcblxuXHRcdHNlbGYuZXZhbHVhdGUgPSBmdW5jdGlvbigpIHtcblx0XHRcdC8qIGpzbGludCBldmlsOiB0cnVlICovXG5cdFx0XHR2YXIgY2FsY3VsYXRpb24gPSBwYXJzZUZsb2F0KGV2YWwoc2VsZi5tZW1vcnkoKSkpLnRvUHJlY2lzaW9uKDYpO1xuXHRcdFx0Ly8gQ29udmVydCB0byBOdW1iZXIgdG8gcmVtb3ZlIHRyYWlsaW5nIHplcm9zXG5cdFx0XHRzZWxmLmRpc3BsYXkoTnVtYmVyKGNhbGN1bGF0aW9uKSk7XG5cdFx0XHRzZWxmLm1lbW9yeSgnJyk7XG5cdFx0XHRzZWxmLmFsbG93Rmlyc3RPcGVyYXRvciA9IHRydWU7XG5cdFx0fTtcblxuXHRcdHNlbGYuYWxsb3dGaXJzdE9wZXJhdG9yID0gZmFsc2U7XG5cblx0XHRzZWxmLndyYXBJbkJyYWNrZXRzID0gZnVuY3Rpb24oc3RyKSB7XG5cdFx0XHRyZXR1cm4gJygnICsgc3RyICsgJyknO1xuXHRcdH07XG5cblx0XHRzZWxmLmFsbENsZWFyID0gZnVuY3Rpb24oKSB7XG5cdFx0XHRzZWxmLm1lbW9yeSgnJyk7XG5cdFx0XHRzZWxmLmRpc3BsYXkoJycpO1xuXHRcdFx0c2VsZi5hbGxvd0ZpcnN0T3BlcmF0b3IgPSBmYWxzZTtcblx0XHR9O1xuXG5cdFx0c2VsZi5zaW5nbGVDbGVhciA9IGZ1bmN0aW9uKCkge1xuXHRcdFx0c2VsZi5tZW1vcnkoc2VsZi5tZW1vcnkoKS5zbGljZSgwLCBzZWxmLm1lbW9yeSgpLmxlbmd0aCAtIDEpKTtcblx0XHR9O1xuXG5cdFx0c2VsZi52ZXJpZnkgPSBmdW5jdGlvbih2YWwpIHtcblx0XHRcdHN3aXRjaCAodmFsKSB7XG5cdFx0XHRcdGNhc2UgJz0nOlxuXHRcdFx0XHRcdHNlbGYuZXZhbHVhdGUoKTtcblx0XHRcdFx0XHRicmVhaztcblx0XHRcdFx0Y2FzZSAnQUMnOlxuXHRcdFx0XHRcdHNlbGYuYWxsQ2xlYXIoKTtcblx0XHRcdFx0XHRicmVhaztcblx0XHRcdFx0Y2FzZSAnQyc6XG5cdFx0XHRcdFx0c2VsZi5zaW5nbGVDbGVhcigpO1xuXHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHRjYXNlICd4Jzpcblx0XHRcdFx0XHRpZiAoc2VsZi5tZW1vcnkoKS5sZW5ndGggPiAwIHx8IHNlbGYuYWxsb3dGaXJzdE9wZXJhdG9yKSB7XG5cdFx0XHRcdFx0XHR2YWwgPSAnKic7XG5cdFx0XHRcdFx0XHRzZWxmLnVwZGF0ZSh2YWwpO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHRicmVhaztcblx0XHRcdFx0Y2FzZSAnLyc6XG5cdFx0XHRcdFx0aWYgKHNlbGYubWVtb3J5KCkubGVuZ3RoID4gMCB8fCBzZWxmLmFsbG93Rmlyc3RPcGVyYXRvcikge1xuXHRcdFx0XHRcdFx0c2VsZi51cGRhdGUodmFsKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0YnJlYWs7XG5cdFx0XHRcdGNhc2UgJyUnOlxuXHRcdFx0XHRcdGlmIChzZWxmLm1lbW9yeSgpLmxlbmd0aCA+IDApIHtcblx0XHRcdFx0XHRcdC8vIEZJWCBuZWVkIHRvIHdyYXAgQUxMIG1lbW9yeSBjb250ZW50cyB0byBicmFja2V0cyBhbmQgdGhlbiBldmFsdWF0ZSEhIVxuXHRcdFx0XHRcdFx0c2VsZi51cGRhdGUoJyoxLzEwMCcpO1xuXHRcdFx0XHRcdFx0c2VsZi5tZW1vcnkoc2VsZi53cmFwSW5CcmFja2V0cyhzZWxmLm1lbW9yeSgpKSk7XG5cdFx0XHRcdFx0XHRzZWxmLmV2YWx1YXRlKCk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHRjYXNlICcsJzpcblx0XHRcdFx0XHR2YWwgPSAnLic7XG5cdFx0XHRcdFx0aWYgKHRoaXMuY29tbWFWYWxpZCgpKSB7XG5cdFx0XHRcdFx0XHRzZWxmLnVwZGF0ZSh2YWwpO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHRicmVhaztcblx0XHRcdFx0ZGVmYXVsdDpcblx0XHRcdFx0XHRzZWxmLnVwZGF0ZSh2YWwpO1xuXHRcdFx0fVxuXHRcdH07XG5cblx0XHRzZWxmLmNvbW1hVmFsaWQgPSBmdW5jdGlvbigpIHtcblx0XHRcdHZhciBtZW0gPSB0aGlzLm1lbW9yeSgpLnNwbGl0KCcnKTtcblx0XHRcdHZhciBpO1xuXHRcdFx0Zm9yIChpID0gbWVtLmxlbmd0aCAtIDE7IGkgPj0gMDsgaS0tKSB7XG5cdFx0XHRcdGlmIChtZW1baV0gPT09ICcuJykge1xuXHRcdFx0XHRcdHJldHVybiBmYWxzZTtcblx0XHRcdFx0fVxuXHRcdFx0XHRpZiAodGhpcy5pc09wZXJhdG9yKG1lbVtpXSkpIHtcblx0XHRcdFx0XHRyZXR1cm4gdHJ1ZTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdFx0cmV0dXJuIHRydWU7XG5cdFx0fTtcblxuXHRcdHNlbGYudXBkYXRlID0gZnVuY3Rpb24odmFsKSB7XG5cdFx0XHR2YXIgbGFzdCA9IHNlbGYuZ2V0TGFzdCgpO1xuXHRcdFx0aWYoc2VsZi5pc09wZXJhdG9yKGxhc3QpICYmIHNlbGYuaXNPcGVyYXRvcih2YWwpKSB7XG5cdFx0XHRcdHNlbGYubWVtb3J5KHNlbGYubWVtb3J5KCkuc2xpY2UoMCwgc2VsZi5tZW1vcnkoKS5sZW5ndGggLSAxKSArIHZhbCk7XG5cdFx0XHR9XG5cdFx0XHRlbHNlIHtcblx0XHRcdFx0c2VsZi5tZW1vcnkoc2VsZi5tZW1vcnkoKSArIHZhbCk7XG5cdFx0XHR9XG5cdFx0fTtcblxuXHRcdHNlbGYuaXNPcGVyYXRvciA9IGZ1bmN0aW9uKHgpIHtcblx0XHRcdHZhciBpO1xuXHRcdFx0Zm9yIChpID0gMDsgaSA8IG1vZGVsLm9wZXJhdG9ycy5sZW5ndGg7IGkrKykge1xuXHRcdFx0XHRpZiAoeCA9PT0gbW9kZWwub3BlcmF0b3JzW2ldKSByZXR1cm4gdHJ1ZTtcblx0XHRcdH1cblx0XHRcdHJldHVybiBmYWxzZTtcblx0XHR9O1xuXHR9XG5cblx0dmFyIG1vZGVsID0gIHtcblx0XHRvcGVyYXRvcnM6IFsnKycsICctJywgJy8nLCAnKicsICclJ10sXG5cdFx0c2lnbnM6IFsnKycsICctJ11cblx0fTtcblxuXHR2YXIgdmlldyA9IHtcblx0XHRpbml0OiBmdW5jdGlvbigpIHtcblx0XHRcdHRoaXMuJGtleXMgPSAkKCcua2V5cycpO1xuXHRcdFx0dGhpcy4ka2V5cy5lYWNoKGZ1bmN0aW9uKCkge1xuXHRcdFx0XHQkKHRoaXMpLmNsaWNrKGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRcdHZtLnZlcmlmeSgkKHRoaXMpLnRleHQoKSk7XG5cdFx0XHRcdH0pO1xuXHRcdFx0fSk7XG5cdFx0fVxuXHR9O1xuXG5cdHZpZXcuaW5pdCgpO1xuXG5cdHZhciB2bSA9IG5ldyBWaWV3TW9kZWwoKTtcblx0a28uYXBwbHlCaW5kaW5ncyh2bSk7XG5cbn0pOyJdLCJzb3VyY2VSb290IjoiL3NvdXJjZS8ifQ==
