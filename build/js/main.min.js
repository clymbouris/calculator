$(document).ready(function(){function ViewModel(arr){var self=this;self.maxCharacters=52,self.memory=ko.observable("").extend({maxCharacters:self.maxCharacters}),self.display=ko.observable(""),self.getLast=function(e){return self.memory().split("")[self.memory().length-1]},self.evaluate=function(){var calculation=parseFloat(eval(self.memory())).toPrecision(6);self.display(),self.memory(""),self.allowFirstOperator=!0},self.allowFirstOperator=!1,self.allClear=function(){self.memory(""),self.display(""),self.allowFirstOperator=!1},self.singleClear=function(){self.memory(self.memory().slice(0,self.memory().length-1))},self.verify=function(e){switch(e){case"=":self.evaluate();break;case"AC":self.allClear();break;case"C":self.singleClear();break;case"x":(self.memory().length>0||self.allowFirstOperator)&&(e="*",self.update(e));break;case"/":(self.memory().length>0||self.allowFirstOperator)&&self.update(e);break;case"%":self.memory().length>0&&(self.update("*1/100"),self.evaluate());break;case",":e=".",this.commaValid()&&self.update(e);break;default:self.update(e)}},self.commaValid=function(){var e,l=this.memory().split("");for(e=l.length-1;e>=0;e--){if("."===l[e])return!1;if(this.isOperator(l[e]))return!0}return!0},self.update=function(e){var l=self.getLast();self.isOperator(l)&&self.isOperator(e)?self.memory(self.memory().slice(0,self.memory().length-1)+e):self.memory(self.memory()+e)},self.isOperator=function(e){var l;for(l=0;l<model.operators.length;l++)if(e===model.operators[l])return!0;return!1}}var model={operators:["+","-","/","*","%"],signs:["+","-"]},view={init:function(){this.$keys=$(".keys"),this.$keys.each(function(){$(this).click(function(){vm.verify($(this).text())})})}};view.init();var vm=new ViewModel;ko.applyBindings(vm)});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5qcyJdLCJuYW1lcyI6WyIkIiwiZG9jdW1lbnQiLCJyZWFkeSIsIlZpZXdNb2RlbCIsImFyciIsInNlbGYiLCJ0aGlzIiwibWF4Q2hhcmFjdGVycyIsIm1lbW9yeSIsImtvIiwib2JzZXJ2YWJsZSIsImV4dGVuZCIsImRpc3BsYXkiLCJnZXRMYXN0Iiwic3RyIiwic3BsaXQiLCJsZW5ndGgiLCJldmFsdWF0ZSIsImNhbGN1bGF0aW9uIiwicGFyc2VGbG9hdCIsImV2YWwiLCJ0b1ByZWNpc2lvbiIsImFsbG93Rmlyc3RPcGVyYXRvciIsImFsbENsZWFyIiwic2luZ2xlQ2xlYXIiLCJzbGljZSIsInZlcmlmeSIsInZhbCIsInVwZGF0ZSIsImNvbW1hVmFsaWQiLCJpIiwibWVtIiwiaXNPcGVyYXRvciIsImxhc3QiLCJ4IiwibW9kZWwiLCJvcGVyYXRvcnMiLCJzaWducyIsInZpZXciLCJpbml0IiwiJGtleXMiLCJlYWNoIiwiY2xpY2siLCJ2bSIsInRleHQiLCJhcHBseUJpbmRpbmdzIl0sIm1hcHBpbmdzIjoiQUFBQUEsRUFBQUMsVUFBQUMsTUFBQSxXQUVBLFFBQUFDLFdBQUFDLEtBQ0EsR0FBQUMsTUFBQUMsSUFFQUQsTUFBQUUsY0FBQSxHQUVBRixLQUFBRyxPQUFBQyxHQUFBQyxXQUFBLElBQ0FDLFFBQUFKLGNBQUFGLEtBQUFFLGdCQUVBRixLQUFBTyxRQUFBSCxHQUFBQyxXQUFBLElBRUFMLEtBQUFRLFFBQUEsU0FBQUMsR0FDQSxNQUFBVCxNQUFBRyxTQUFBTyxNQUFBLElBQUFWLEtBQUFHLFNBQUFRLE9BQUEsSUFHQVgsS0FBQVksU0FBQSxXQUVBLEdBQUFDLGFBQUFDLFdBQUFDLEtBQUFmLEtBQUFHLFdBQUFhLFlBQUEsRUFDQWhCLE1BQUFPLFVBQ0FQLEtBQUFHLE9BQUEsSUFDQUgsS0FBQWlCLG9CQUFBLEdBR0FqQixLQUFBaUIsb0JBQUEsRUFFQWpCLEtBQUFrQixTQUFBLFdBQ0FsQixLQUFBRyxPQUFBLElBQ0FILEtBQUFPLFFBQUEsSUFDQVAsS0FBQWlCLG9CQUFBLEdBR0FqQixLQUFBbUIsWUFBQSxXQUNBbkIsS0FBQUcsT0FBQUgsS0FBQUcsU0FBQWlCLE1BQUEsRUFBQXBCLEtBQUFHLFNBQUFRLE9BQUEsS0FHQVgsS0FBQXFCLE9BQUEsU0FBQUMsR0FDQSxPQUFBQSxHQUNBLElBQUEsSUFDQXRCLEtBQUFZLFVBQ0EsTUFDQSxLQUFBLEtBQ0FaLEtBQUFrQixVQUNBLE1BQ0EsS0FBQSxJQUNBbEIsS0FBQW1CLGFBQ0EsTUFDQSxLQUFBLEtBQ0FuQixLQUFBRyxTQUFBUSxPQUFBLEdBQUFYLEtBQUFpQixzQkFDQUssRUFBQSxJQUNBdEIsS0FBQXVCLE9BQUFELEdBRUEsTUFDQSxLQUFBLEtBQ0F0QixLQUFBRyxTQUFBUSxPQUFBLEdBQUFYLEtBQUFpQixxQkFDQWpCLEtBQUF1QixPQUFBRCxFQUVBLE1BQ0EsS0FBQSxJQUNBdEIsS0FBQUcsU0FBQVEsT0FBQSxJQUVBWCxLQUFBdUIsT0FBQSxVQUNBdkIsS0FBQVksV0FFQSxNQUNBLEtBQUEsSUFDQVUsRUFBQSxJQUNBckIsS0FBQXVCLGNBQ0F4QixLQUFBdUIsT0FBQUQsRUFFQSxNQUNBLFNBQ0F0QixLQUFBdUIsT0FBQUQsS0FJQXRCLEtBQUF3QixXQUFBLFdBQ0EsR0FDQUMsR0FEQUMsRUFBQXpCLEtBQUFFLFNBQUFPLE1BQUEsR0FFQSxLQUFBZSxFQUFBQyxFQUFBZixPQUFBLEVBQUFjLEdBQUEsRUFBQUEsSUFBQSxDQUNBLEdBQUEsTUFBQUMsRUFBQUQsR0FDQSxPQUFBLENBRUEsSUFBQXhCLEtBQUEwQixXQUFBRCxFQUFBRCxJQUNBLE9BQUEsRUFHQSxPQUFBLEdBR0F6QixLQUFBdUIsT0FBQSxTQUFBRCxHQUNBLEdBQUFNLEdBQUE1QixLQUFBUSxTQUNBUixNQUFBMkIsV0FBQUMsSUFBQTVCLEtBQUEyQixXQUFBTCxHQUNBdEIsS0FBQUcsT0FBQUgsS0FBQUcsU0FBQWlCLE1BQUEsRUFBQXBCLEtBQUFHLFNBQUFRLE9BQUEsR0FBQVcsR0FHQXRCLEtBQUFHLE9BQUFILEtBQUFHLFNBQUFtQixJQUlBdEIsS0FBQTJCLFdBQUEsU0FBQUUsR0FDQSxHQUFBSixFQUNBLEtBQUFBLEVBQUEsRUFBQUEsRUFBQUssTUFBQUMsVUFBQXBCLE9BQUFjLElBQ0EsR0FBQUksSUFBQUMsTUFBQUMsVUFBQU4sR0FBQSxPQUFBLENBRUEsUUFBQSxHQUlBLEdBQUFLLFFBQ0FDLFdBQUEsSUFBQSxJQUFBLElBQUEsSUFBQSxLQUNBQyxPQUFBLElBQUEsTUFHQUMsTUFDQUMsS0FBQSxXQUNBakMsS0FBQWtDLE1BQUF4QyxFQUFBLFNBQ0FNLEtBQUFrQyxNQUFBQyxLQUFBLFdBQ0F6QyxFQUFBTSxNQUFBb0MsTUFBQSxXQUNBQyxHQUFBakIsT0FBQTFCLEVBQUFNLE1BQUFzQyxhQU1BTixNQUFBQyxNQUVBLElBQUFJLElBQUEsR0FBQXhDLFVBQ0FNLElBQUFvQyxjQUFBRiIsImZpbGUiOiJtYWluLm1pbi5qcyIsInNvdXJjZXNDb250ZW50IjpbIiQoZG9jdW1lbnQpLnJlYWR5KGZ1bmN0aW9uKCkge1xuXG5cdGZ1bmN0aW9uIFZpZXdNb2RlbChhcnIpIHtcblx0XHR2YXIgc2VsZiA9IHRoaXM7XG5cblx0XHRzZWxmLm1heENoYXJhY3RlcnMgPSA1MjtcblxuXHRcdHNlbGYubWVtb3J5ID0ga28ub2JzZXJ2YWJsZSgnJylcblx0XHQuZXh0ZW5kKHsgbWF4Q2hhcmFjdGVyczogc2VsZi5tYXhDaGFyYWN0ZXJzIH0pO1xuXG5cdFx0c2VsZi5kaXNwbGF5ID0ga28ub2JzZXJ2YWJsZSgnJyk7XG5cblx0XHRzZWxmLmdldExhc3QgPSBmdW5jdGlvbihzdHIpIHtcblx0XHRcdHJldHVybiBzZWxmLm1lbW9yeSgpLnNwbGl0KCcnKVtzZWxmLm1lbW9yeSgpLmxlbmd0aCAtIDFdO1xuXHRcdH07XG5cblx0XHRzZWxmLmV2YWx1YXRlID0gZnVuY3Rpb24oKSB7XG5cdFx0XHQvKiBqc2xpbnQgZXZpbDogdHJ1ZSAqL1xuXHRcdFx0dmFyIGNhbGN1bGF0aW9uID0gcGFyc2VGbG9hdChldmFsKHNlbGYubWVtb3J5KCkpKS50b1ByZWNpc2lvbig2KTtcblx0XHRcdHNlbGYuZGlzcGxheSgpO1xuXHRcdFx0c2VsZi5tZW1vcnkoJycpO1xuXHRcdFx0c2VsZi5hbGxvd0ZpcnN0T3BlcmF0b3IgPSB0cnVlO1xuXHRcdH07XG5cblx0XHRzZWxmLmFsbG93Rmlyc3RPcGVyYXRvciA9IGZhbHNlO1xuXG5cdFx0c2VsZi5hbGxDbGVhciA9IGZ1bmN0aW9uKCkge1xuXHRcdFx0c2VsZi5tZW1vcnkoJycpO1xuXHRcdFx0c2VsZi5kaXNwbGF5KCcnKTtcblx0XHRcdHNlbGYuYWxsb3dGaXJzdE9wZXJhdG9yID0gZmFsc2U7XG5cdFx0fTtcblxuXHRcdHNlbGYuc2luZ2xlQ2xlYXIgPSBmdW5jdGlvbigpIHtcblx0XHRcdHNlbGYubWVtb3J5KHNlbGYubWVtb3J5KCkuc2xpY2UoMCwgc2VsZi5tZW1vcnkoKS5sZW5ndGggLSAxKSk7XG5cdFx0fTtcblxuXHRcdHNlbGYudmVyaWZ5ID0gZnVuY3Rpb24odmFsKSB7XG5cdFx0XHRzd2l0Y2ggKHZhbCkge1xuXHRcdFx0XHRjYXNlICc9Jzpcblx0XHRcdFx0XHRzZWxmLmV2YWx1YXRlKCk7XG5cdFx0XHRcdFx0YnJlYWs7XG5cdFx0XHRcdGNhc2UgJ0FDJzpcblx0XHRcdFx0XHRzZWxmLmFsbENsZWFyKCk7XG5cdFx0XHRcdFx0YnJlYWs7XG5cdFx0XHRcdGNhc2UgJ0MnOlxuXHRcdFx0XHRcdHNlbGYuc2luZ2xlQ2xlYXIoKTtcblx0XHRcdFx0XHRicmVhaztcblx0XHRcdFx0Y2FzZSAneCc6XG5cdFx0XHRcdFx0aWYgKHNlbGYubWVtb3J5KCkubGVuZ3RoID4gMCB8fCBzZWxmLmFsbG93Rmlyc3RPcGVyYXRvcikge1xuXHRcdFx0XHRcdFx0dmFsID0gJyonO1xuXHRcdFx0XHRcdFx0c2VsZi51cGRhdGUodmFsKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0YnJlYWs7XG5cdFx0XHRcdGNhc2UgJy8nOlxuXHRcdFx0XHRcdGlmIChzZWxmLm1lbW9yeSgpLmxlbmd0aCA+IDAgfHwgc2VsZi5hbGxvd0ZpcnN0T3BlcmF0b3IpIHtcblx0XHRcdFx0XHRcdHNlbGYudXBkYXRlKHZhbCk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHRjYXNlICclJzpcblx0XHRcdFx0XHRpZiAoc2VsZi5tZW1vcnkoKS5sZW5ndGggPiAwKSB7XG5cdFx0XHRcdFx0XHQvLyBGSVggbmVlZCB0byB3cmFwIEFMTCBtZW1vcnkgY29udGVudHMgdG8gYnJhY2tldHMgYW5kIHRoZW4gZXZhbHVhdGUhISFcblx0XHRcdFx0XHRcdHNlbGYudXBkYXRlKCcqMS8xMDAnKTtcblx0XHRcdFx0XHRcdHNlbGYuZXZhbHVhdGUoKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0YnJlYWs7XG5cdFx0XHRcdGNhc2UgJywnOlxuXHRcdFx0XHRcdHZhbCA9ICcuJztcblx0XHRcdFx0XHRpZiAodGhpcy5jb21tYVZhbGlkKCkpIHtcblx0XHRcdFx0XHRcdHNlbGYudXBkYXRlKHZhbCk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHRkZWZhdWx0OlxuXHRcdFx0XHRcdHNlbGYudXBkYXRlKHZhbCk7XG5cdFx0XHR9XG5cdFx0fTtcblxuXHRcdHNlbGYuY29tbWFWYWxpZCA9IGZ1bmN0aW9uKCkge1xuXHRcdFx0dmFyIG1lbSA9IHRoaXMubWVtb3J5KCkuc3BsaXQoJycpO1xuXHRcdFx0dmFyIGk7XG5cdFx0XHRmb3IgKGkgPSBtZW0ubGVuZ3RoIC0gMTsgaSA+PSAwOyBpLS0pIHtcblx0XHRcdFx0aWYgKG1lbVtpXSA9PT0gJy4nKSB7XG5cdFx0XHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdFx0XHR9XG5cdFx0XHRcdGlmICh0aGlzLmlzT3BlcmF0b3IobWVtW2ldKSkge1xuXHRcdFx0XHRcdHJldHVybiB0cnVlO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0XHRyZXR1cm4gdHJ1ZTtcblx0XHR9O1xuXG5cdFx0c2VsZi51cGRhdGUgPSBmdW5jdGlvbih2YWwpIHtcblx0XHRcdHZhciBsYXN0ID0gc2VsZi5nZXRMYXN0KCk7XG5cdFx0XHRpZihzZWxmLmlzT3BlcmF0b3IobGFzdCkgJiYgc2VsZi5pc09wZXJhdG9yKHZhbCkpIHtcblx0XHRcdFx0c2VsZi5tZW1vcnkoc2VsZi5tZW1vcnkoKS5zbGljZSgwLCBzZWxmLm1lbW9yeSgpLmxlbmd0aCAtIDEpICsgdmFsKTtcblx0XHRcdH1cblx0XHRcdGVsc2Uge1xuXHRcdFx0XHRzZWxmLm1lbW9yeShzZWxmLm1lbW9yeSgpICsgdmFsKTtcblx0XHRcdH1cblx0XHR9O1xuXG5cdFx0c2VsZi5pc09wZXJhdG9yID0gZnVuY3Rpb24oeCkge1xuXHRcdFx0dmFyIGk7XG5cdFx0XHRmb3IgKGkgPSAwOyBpIDwgbW9kZWwub3BlcmF0b3JzLmxlbmd0aDsgaSsrKSB7XG5cdFx0XHRcdGlmICh4ID09PSBtb2RlbC5vcGVyYXRvcnNbaV0pIHJldHVybiB0cnVlO1xuXHRcdFx0fVxuXHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdH07XG5cdH1cblxuXHR2YXIgbW9kZWwgPSAge1xuXHRcdG9wZXJhdG9yczogWycrJywgJy0nLCAnLycsICcqJywgJyUnXSxcblx0XHRzaWduczogWycrJywgJy0nXVxuXHR9O1xuXG5cdHZhciB2aWV3ID0ge1xuXHRcdGluaXQ6IGZ1bmN0aW9uKCkge1xuXHRcdFx0dGhpcy4ka2V5cyA9ICQoJy5rZXlzJyk7XG5cdFx0XHR0aGlzLiRrZXlzLmVhY2goZnVuY3Rpb24oKSB7XG5cdFx0XHRcdCQodGhpcykuY2xpY2soZnVuY3Rpb24oKSB7XG5cdFx0XHRcdFx0dm0udmVyaWZ5KCQodGhpcykudGV4dCgpKTtcblx0XHRcdFx0fSk7XG5cdFx0XHR9KTtcblx0XHR9XG5cdH07XG5cblx0dmlldy5pbml0KCk7XG5cblx0dmFyIHZtID0gbmV3IFZpZXdNb2RlbCgpO1xuXHRrby5hcHBseUJpbmRpbmdzKHZtKTtcblxufSk7Il0sInNvdXJjZVJvb3QiOiIvc291cmNlLyJ9
